Subject: [PATCH] 5_3_fix_hibernate_issue
---
Index: src/main/resources/spring/spring-db.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/spring/spring-db.xml b/src/main/resources/spring/spring-db.xml
--- a/src/main/resources/spring/spring-db.xml	(revision 46dfbb55b3439d98c549f22de8cf2e0b35ed8c7c)
+++ b/src/main/resources/spring/spring-db.xml	(date 1741206628478)
@@ -48,6 +48,7 @@
             <map>
                 <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                 <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
+                <entry key="#{T(org.hibernate.cfg.AvailableSettings).JPA_PROXY_COMPLIANCE}" value="false"/>
                 <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>-->
             </map>
         </property>
Index: src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java b/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java
--- a/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java	(revision 46dfbb55b3439d98c549f22de8cf2e0b35ed8c7c)
+++ b/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java	(date 1741206865550)
@@ -4,6 +4,8 @@
 
 import javax.persistence.*;
 
+import static org.hibernate.proxy.HibernateProxyHelper.getClassWithoutInitializingProxy;
+
 @MappedSuperclass
 // http://stackoverflow.com/questions/594597/hibernate-annotations-which-is-better-field-or-property-access
 @Access(AccessType.FIELD)
@@ -13,6 +15,8 @@
     @Id
     @SequenceGenerator(name = "global_seq", sequenceName = "global_seq", allocationSize = 1, initialValue = START_SEQ)
     @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "global_seq")
+//  See https://hibernate.atlassian.net/browse/HHH-3718 and https://hibernate.atlassian.net/browse/HHH-12034
+//  Proxy initialization when accessing its identifier managed now by JPA_PROXY_COMPLIANCE setting
     protected Integer id;
 
     protected AbstractBaseEntity() {
@@ -30,34 +34,31 @@
         return id;
     }
 
+    // doesn't work for hibernate lazy proxy
     public int id() {
         Assert.notNull(id, "Entity must have id");
         return id;
     }
 
     public boolean isNew() {
-        return this.id == null;
+        return getId() == null;
     }
 
     @Override
     public String toString() {
-        return getClass().getSimpleName() + ":" + id;
+        return getClass().getSimpleName() + ":" + getId();
     }
 
+    //  https://stackoverflow.com/a/78077907/548473
     @Override
-    public boolean equals(Object o) {
-        if (this == o) {
-            return true;
-        }
-        if (o == null || getClass() != o.getClass()) {
-            return false;
-        }
-        AbstractBaseEntity that = (AbstractBaseEntity) o;
-        return id != null && id.equals(that.id);
+    public final boolean equals(Object o) {
+        if (this == o) return true;
+        if (o == null || getClassWithoutInitializingProxy(this) != getClassWithoutInitializingProxy(o)) return false;
+        return getId() != null && getId().equals(((AbstractBaseEntity) o).getId());
     }
 
     @Override
-    public int hashCode() {
-        return id == null ? 0 : id;
+    public final int hashCode() {
+        return getClassWithoutInitializingProxy(this).hashCode();
     }
 }
\ No newline at end of file
