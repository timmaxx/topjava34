Subject: [PATCH] 11_08_i18n
---
Index: src/main/java/ru/javawebinar/topjava/web/GlobalExceptionHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/web/GlobalExceptionHandler.java b/src/main/java/ru/javawebinar/topjava/web/GlobalExceptionHandler.java
--- a/src/main/java/ru/javawebinar/topjava/web/GlobalExceptionHandler.java	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/java/ru/javawebinar/topjava/web/GlobalExceptionHandler.java	(date 1745438885892)
@@ -2,6 +2,7 @@
 
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
+import org.springframework.context.support.MessageSourceAccessor;
 import org.springframework.http.HttpStatus;
 import org.springframework.web.bind.annotation.ControllerAdvice;
 import org.springframework.web.bind.annotation.ExceptionHandler;
@@ -17,6 +18,12 @@
 public class GlobalExceptionHandler {
     private static final Logger log = LoggerFactory.getLogger(GlobalExceptionHandler.class);
 
+    private final MessageSourceAccessor messageSourceAccessor;
+
+    public GlobalExceptionHandler(MessageSourceAccessor messageSourceAccessor) {
+        this.messageSourceAccessor = messageSourceAccessor;
+    }
+
     @ExceptionHandler(Exception.class)
     public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception {
         log.error("Exception at request " + req.getRequestURL(), e);
@@ -24,7 +31,9 @@
 
         HttpStatus httpStatus = HttpStatus.INTERNAL_SERVER_ERROR;
         ModelAndView mav = new ModelAndView("exception",
-                Map.of("exception", rootCause, "message", ValidationUtil.getMessage(rootCause), "status", httpStatus));
+                Map.of("exception", rootCause, "message", ValidationUtil.getMessage(rootCause),
+                        "typeMessage", messageSourceAccessor.getMessage(ErrorType.APP_ERROR.getErrorCode()),
+                        "status", httpStatus));
         mav.setStatus(httpStatus);
 
         // Interceptor is not invoked, put userTo
Index: config/messages/app_ru.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/messages/app_ru.properties b/config/messages/app_ru.properties
--- a/config/messages/app_ru.properties	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/config/messages/app_ru.properties	(date 1745438885777)
@@ -21,6 +21,11 @@
 user.password=Пароль
 user.caloriesPerDay=Норма калорий в день
 
+userTo.name=Имя
+userTo.email=Почта
+userTo.password=Пароль
+userTo.caloriesPerDay=Норма калорий в день
+
 meal.title=Моя еда
 meal.edit=Редактировать еду
 meal.add=Добавить еду
@@ -39,11 +44,23 @@
 common.saved=Запись сохранена
 common.enabled=Запись активирована
 common.disabled=Запись деактивирована
-common.errorStatus=Статус ошибки
-common.appError=Ошибка приложения
 common.confirm=Вы уверены?
 common.save=Сохранить
 common.cancel=Отменить
+common.search=Искать
 
 exception.user.duplicateEmail=Пользователь с такой почтой уже есть в приложении
-exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем
\ No newline at end of file
+exception.meal.duplicateDateTime=У вас уже есть еда с такой датой/временем
+
+error.appError=Ошибка приложения
+error.dataNotFound=Данные не найдены
+error.dataError=Ошибка в данных
+error.validationError=Ошибка проверки данных
+
+NotEmpty=[{0}] не должно быть пустым
+NotBlank=[{0}] не должно быть пустым
+NotNull=[{0}] не должно быть пустым
+Email=Неверный формат [{0}]
+Range= [{0}] должно быть между {2} и {1}
+Length=Длинна [{0}] должна быть между {2} и {1}
+Size=Размер [{0}] должен быть между {2} и {1}
\ No newline at end of file
Index: config/messages/app.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/messages/app.properties b/config/messages/app.properties
--- a/config/messages/app.properties	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/config/messages/app.properties	(date 1745438885767)
@@ -21,6 +21,11 @@
 user.password=Password
 user.caloriesPerDay=Daily calorie limit
 
+userTo.name=Name
+userTo.email=Email
+userTo.password=Password
+userTo.caloriesPerDay=Daily calorie limit
+
 meal.title=Meals
 meal.edit=Edit meal
 meal.add=Add meal
@@ -39,11 +44,23 @@
 common.saved=Record saved
 common.enabled=Record enabled
 common.disabled=Record disabled
-common.errorStatus=Error status
-common.appError=Application error
 common.confirm=Are you sure?
 common.save=Save
 common.cancel=Cancel
+common.search=Search
 
 exception.user.duplicateEmail=User with this email already exists
-exception.meal.duplicateDateTime=You already have meal with this date/time
\ No newline at end of file
+exception.meal.duplicateDateTime=You already have meal with this date/time
+
+error.appError=Application error
+error.dataNotFound=Data not found
+error.dataError=Data error
+error.validationError=Validation error
+
+NotEmpty=[{0}] must not be empty
+NotBlank=[{0}] must not be empty
+NotNull=[{0}] must not be empty
+Email= Invalid format of [{0}]
+Range=[{0}] must be between {2} and {1}
+Length=[{0}] length must be between {2} and {1}
+Size=[{0}] size must be between {2} and {1}
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp b/src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp
--- a/src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/webapp/WEB-INF/jsp/fragments/i18n.jsp	(date 1745438915265)
@@ -8,7 +8,7 @@
     i18n["addTitle"] = '<spring:message code="${param.page}.add"/>';
     i18n["editTitle"] = '<spring:message code="${param.page}.edit"/>';
 
-    <c:forEach var='key' items='${["common.deleted", "common.saved", "common.enabled", "common.disabled", "common.errorStatus", "common.confirm"]}'>
+    <c:forEach var='key' items='${["common.deleted", "common.saved", "common.enabled", "common.disabled", "common.search", "common.confirm"]}'>
     i18n['${key}'] = '<spring:message code="${key}"/>';
     </c:forEach>
 </script>
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java b/src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java
--- a/src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/java/ru/javawebinar/topjava/web/ExceptionInfoHandler.java	(date 1745438885892)
@@ -88,9 +88,10 @@
     }
 
     //    https://stackoverflow.com/questions/538870/should-private-helper-methods-be-static-if-they-can-be-static
-    private static ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logStackTrace, ErrorType errorType, String... details) {
+    private ErrorInfo logAndGetErrorInfo(HttpServletRequest req, Exception e, boolean logStackTrace, ErrorType errorType, String... details) {
         Throwable rootCause = ValidationUtil.logAndGetRootCause(log, req, e, logStackTrace, errorType);
         return new ErrorInfo(req.getRequestURL(), errorType,
+                messageSourceAccessor.getMessage(errorType.getErrorCode()),
                 details.length != 0 ? details : new String[]{ValidationUtil.getMessage(rootCause)});
     }
 }
\ No newline at end of file
Index: src/main/webapp/WEB-INF/jsp/exception.jsp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/WEB-INF/jsp/exception.jsp b/src/main/webapp/WEB-INF/jsp/exception.jsp
--- a/src/main/webapp/WEB-INF/jsp/exception.jsp	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/webapp/WEB-INF/jsp/exception.jsp	(date 1745438915265)
@@ -12,7 +12,7 @@
     <div class="container text-center">
         <br>
         <h4 class="my-3">${status}</h4>
-        <h2><spring:message code="common.appError"/></h2>
+        <h2>${typeMessage}</h2>
         <h4 class="my-5">${message}</h4>
     </div>
 </div>
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java b/src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java
--- a/src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/java/ru/javawebinar/topjava/util/exception/ErrorInfo.java	(date 1745438885819)
@@ -3,11 +3,13 @@
 public class ErrorInfo {
     private final String url;
     private final ErrorType type;
+    private final String typeMessage;
     private final String[] details;
 
-    public ErrorInfo(CharSequence url, ErrorType type, String... details) {
+    public ErrorInfo(CharSequence url, ErrorType type, String typeMessage, String... details) {
         this.url = url.toString();
         this.type = type;
+        this.typeMessage = typeMessage;
         this.details = details;
     }
 }
\ No newline at end of file
Index: src/main/webapp/resources/js/topjava.common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/resources/js/topjava.common.js b/src/main/webapp/resources/js/topjava.common.js
--- a/src/main/webapp/resources/js/topjava.common.js	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/webapp/resources/js/topjava.common.js	(date 1745439103470)
@@ -9,7 +9,10 @@
                 "dataSrc": ""
             },
             "paging": false,
-            "info": true
+            "info": true,
+            "language": {
+                "search": i18n["common.search"]
+            }
         }
     );
     form = $('#detailsForm');
@@ -108,7 +111,7 @@
     closeNoty();
     var errorInfo = jqXHR.responseJSON;
     failedNote = new Noty({
-        text: `<span class='fa fa-lg fa-exclamation-circle'></span> &nbsp;${i18n['common.errorStatus']}: ${jqXHR.status}<br>${errorInfo.type}<br>${errorInfo.details.join("<br>")}`,
+        text: `<span class='fa fa-lg fa-exclamation-circle'></span> &nbsp;${errorInfo.typeMessage}<br>${errorInfo.details.join("<br>")}`,
         type: "error",
         layout: "bottomRight"
     });
Index: src/main/webapp/resources/css/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/webapp/resources/css/style.css b/src/main/webapp/resources/css/style.css
--- a/src/main/webapp/resources/css/style.css	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/webapp/resources/css/style.css	(date 1745438885908)
@@ -32,6 +32,11 @@
     border: 1px solid #9feba6;
 }
 
+/*https://stackoverflow.com/a/53855189/548473*/
+#noty_layout__bottomRight {
+    width: 385px !important;
+}
+
 /*https://getbootstrap.com/docs/4.0/examples/sticky-footer/sticky-footer.css*/
 html {
     position: relative;
Index: src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java b/src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java
--- a/src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(revision b8f6958b7780213af15094dbe695d0d480a39135)
+++ b/src/main/java/ru/javawebinar/topjava/util/exception/ErrorType.java	(date 1745438885877)
@@ -1,8 +1,18 @@
 package ru.javawebinar.topjava.util.exception;
 
 public enum ErrorType {
-    APP_ERROR,
-    DATA_NOT_FOUND,
-    DATA_ERROR,
-    VALIDATION_ERROR
+    APP_ERROR("error.appError"),
+    DATA_NOT_FOUND("error.dataNotFound"),
+    DATA_ERROR("error.dataError"),
+    VALIDATION_ERROR("error.validationError");
+
+    private final String errorCode;
+
+    ErrorType(String errorCode) {
+        this.errorCode = errorCode;
+    }
+
+    public String getErrorCode() {
+        return errorCode;
+    }
 }
