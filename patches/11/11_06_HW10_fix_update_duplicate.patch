Index: src/test/java/ru/javawebinar/topjava/UserTestData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/javawebinar/topjava/UserTestData.java b/src/test/java/ru/javawebinar/topjava/UserTestData.java
--- a/src/test/java/ru/javawebinar/topjava/UserTestData.java	(revision f05ac1673ae785e6427e61a9a879a4aba6da5789)
+++ b/src/test/java/ru/javawebinar/topjava/UserTestData.java	(date 1671656033220)
@@ -42,7 +42,10 @@
 
     public static User getUpdated() {
         User updated = new User(user);
-        updated.setEmail("update@gmail.com");
+
+// In case of update with user.id=null in body needs workaround
+// ValidationUtil.assureIdConsistent called after validation
+//      updated.setEmail("update@gmail.com");
         updated.setName("UpdatedName");
         updated.setCaloriesPerDay(330);
         updated.setPassword("newPass");
Index: src/main/java/ru/javawebinar/topjava/web/user/UniqueMailValidator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/web/user/UniqueMailValidator.java b/src/main/java/ru/javawebinar/topjava/web/user/UniqueMailValidator.java
--- a/src/main/java/ru/javawebinar/topjava/web/user/UniqueMailValidator.java	(revision f05ac1673ae785e6427e61a9a879a4aba6da5789)
+++ b/src/main/java/ru/javawebinar/topjava/web/user/UniqueMailValidator.java	(date 1671656126182)
@@ -1,22 +1,28 @@
 package ru.javawebinar.topjava.web.user;
 
 
+import org.springframework.lang.Nullable;
 import org.springframework.stereotype.Component;
+import org.springframework.util.Assert;
 import org.springframework.util.StringUtils;
 import org.springframework.validation.Errors;
 import ru.javawebinar.topjava.HasIdAndEmail;
 import ru.javawebinar.topjava.model.User;
 import ru.javawebinar.topjava.repository.UserRepository;
 import ru.javawebinar.topjava.web.ExceptionInfoHandler;
+import ru.javawebinar.topjava.web.SecurityUtil;
 
+import javax.servlet.http.HttpServletRequest;
 
 @Component
 public class UniqueMailValidator implements org.springframework.validation.Validator {
 
     private final UserRepository repository;
+    private final HttpServletRequest request;
 
-    public UniqueMailValidator(UserRepository repository) {
+    public UniqueMailValidator(UserRepository repository, @Nullable HttpServletRequest request) {
         this.repository = repository;
+        this.request = request;
     }
 
     @Override
@@ -29,7 +35,18 @@
         HasIdAndEmail user = ((HasIdAndEmail) target);
         if (StringUtils.hasText(user.getEmail())) {
             User dbUser = repository.getByEmail(user.getEmail().toLowerCase());
-            if (dbUser != null && !dbUser.getId().equals(user.getId())) {
+            if (dbUser != null) {
+                Assert.notNull(request, "HttpServletRequest missed");
+                if (request.getMethod().equals("PUT") || (request.getMethod().equals("POST") && user.getId() != null)) {  // update for REST(PUT) and UI(POST)
+                    int dbId = dbUser.id();
+                    // it is ok, if update ourselves
+                    if (user.getId() != null && dbId == user.id()) return;
+
+                    // workaround for update with user.id=null in request body
+                    // ValidationUtil.assureIdConsistent (id setter) called after this validation
+                    String requestURI = request.getRequestURI();
+                    if (requestURI.endsWith("/" + dbId) || (dbId == SecurityUtil.get().getId() && requestURI.contains("/profile"))) return;
+                }
                 errors.rejectValue("email", ExceptionInfoHandler.EXCEPTION_DUPLICATE_EMAIL);
             }
         }
Index: src/test/java/ru/javawebinar/topjava/web/user/AdminRestControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/javawebinar/topjava/web/user/AdminRestControllerTest.java b/src/test/java/ru/javawebinar/topjava/web/user/AdminRestControllerTest.java
--- a/src/test/java/ru/javawebinar/topjava/web/user/AdminRestControllerTest.java	(revision f05ac1673ae785e6427e61a9a879a4aba6da5789)
+++ b/src/test/java/ru/javawebinar/topjava/web/user/AdminRestControllerTest.java	(date 1671656033208)
@@ -91,13 +91,14 @@
     @Test
     void update() throws Exception {
         User updated = getUpdated();
+        updated.setId(null);
         perform(MockMvcRequestBuilders.put(REST_URL + USER_ID)
                 .contentType(MediaType.APPLICATION_JSON)
                 .with(userHttpBasic(admin))
                 .content(jsonWithPassword(updated, updated.getPassword())))
                 .andExpect(status().isNoContent());
 
-        USER_MATCHER.assertMatch(userService.get(USER_ID), updated);
+        USER_MATCHER.assertMatch(userService.get(USER_ID), getUpdated());
     }
 
     @Test
@@ -177,6 +178,7 @@
     @Transactional(propagation = Propagation.NEVER)
     void updateDuplicate() throws Exception {
         User updated = new User(user);
+        updated.setId(null);
         updated.setEmail("admin@gmail.com");
         perform(MockMvcRequestBuilders.put(REST_URL + USER_ID)
                 .contentType(MediaType.APPLICATION_JSON)
Index: src/test/java/ru/javawebinar/topjava/web/user/ProfileRestControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ru/javawebinar/topjava/web/user/ProfileRestControllerTest.java b/src/test/java/ru/javawebinar/topjava/web/user/ProfileRestControllerTest.java
--- a/src/test/java/ru/javawebinar/topjava/web/user/ProfileRestControllerTest.java	(revision f05ac1673ae785e6427e61a9a879a4aba6da5789)
+++ b/src/test/java/ru/javawebinar/topjava/web/user/ProfileRestControllerTest.java	(date 1671656033214)
@@ -70,6 +70,7 @@
 
     @Test
     void update() throws Exception {
+        // ValidationUtil.assureIdConsistent called after validation, needs workaround
         UserTo updatedTo = new UserTo(null, "newName", "user@yandex.ru", "newPassword", 1500);
         perform(MockMvcRequestBuilders.put(REST_URL).contentType(MediaType.APPLICATION_JSON)
                 .with(userHttpBasic(user))
