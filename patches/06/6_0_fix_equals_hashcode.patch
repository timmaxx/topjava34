Subject: [PATCH] 6_0_fix_equals_hashcode
---
Index: src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java b/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java
--- a/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java	(revision 0aa85e34d946416d3f98b050149a0ae650c01cd5)
+++ b/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java	(date 1730753306977)
@@ -1,11 +1,12 @@
 package ru.javawebinar.topjava.model;
 
-import org.hibernate.Hibernate;
 import org.springframework.data.domain.Persistable;
 import org.springframework.util.Assert;
 
 import javax.persistence.*;
 
+import static org.hibernate.proxy.HibernateProxyHelper.getClassWithoutInitializingProxy;
+
 @MappedSuperclass
 // http://stackoverflow.com/questions/594597/hibernate-annotations-which-is-better-field-or-property-access
 @Access(AccessType.FIELD)
@@ -35,6 +36,7 @@
         return id;
     }
 
+    // doesn't work for hibernate lazy proxy
     public int id() {
         Assert.notNull(id, "Entity must have id");
         return id;
@@ -42,24 +44,24 @@
 
     @Override
     public boolean isNew() {
-        return this.id == null;
+        return getId() == null;
     }
 
     @Override
     public String toString() {
-        return getClass().getSimpleName() + ":" + id;
+        return getClass().getSimpleName() + ":" + getId();
     }
 
-    //  https://jpa-buddy.com/blog/hopefully-the-final-article-about-equals-and-hashcode-for-jpa-entities-with-db-generated-ids/
+    //  https://stackoverflow.com/a/78077907/548473
     @Override
-    public boolean equals(Object o) {
+    public final boolean equals(Object o) {
         if (this == o) return true;
-        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;
-        return id != null && id.equals(((AbstractBaseEntity) o).id);
+        if (o == null || getClassWithoutInitializingProxy(this) != getClassWithoutInitializingProxy(o)) return false;
+        return getId() != null && getId().equals(((AbstractBaseEntity) o).getId());
     }
 
     @Override
-    public int hashCode() {
-        return Hibernate.getClass(this).hashCode();
+    public final int hashCode() {
+        return getClassWithoutInitializingProxy(this).hashCode();
     }
 }
\ No newline at end of file
